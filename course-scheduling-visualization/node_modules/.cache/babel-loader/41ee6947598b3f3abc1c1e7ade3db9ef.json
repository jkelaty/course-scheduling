{"ast":null,"code":"var _jsxFileName = \"/Users/jkelaty/Desktop/course-scheduling/course-scheduling/src/CourseScheduling/CourseScheduling.jsx\";\nimport React from 'react';\nimport ScheduleViewer from './ScheduleViewer/ScheduleViewer.jsx';\nimport '../../node_modules/font-awesome/css/font-awesome.min.css';\nimport './CourseScheduling.scss';\nexport default class CourseScheduling extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready: true,\n      courses: null,\n      instructors: null\n    };\n  }\n\n  verifyCourses() {\n    let courses_file = document.getElementById('courses-file').files[0];\n\n    if (!this.state.courses || this.state.courses.name !== courses_file.name) {\n      if (courses_file.name.toLowerCase().endsWith('.csv')) {\n        this.setState({\n          courses: courses_file\n        });\n      }\n    }\n  }\n\n  verifyInstructors() {\n    let instructors_file = document.getElementById('instructors-file').files[0];\n\n    if (!this.state.courses || this.state.courses.name !== instructors_file.name) {\n      if (instructors_file.name.toLowerCase().endsWith('.csv')) {\n        this.setState({\n          instructors: instructors_file\n        });\n      }\n    }\n  }\n\n  ready() {\n    if (this.state.courses && this.state.instructors) {\n      this.setState({\n        ready: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.Header(), this.state.ready ? /*#__PURE__*/React.createElement(React.Fragment, null, this.Reset(), /*#__PURE__*/React.createElement(ScheduleViewer, {\n      courses: this.state.courses,\n      instructors: this.state.instructors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    })) : this.StartPage());\n  }\n\n  Reset() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cs-reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-undo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  Header() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"cs-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Course Scheduling\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cs-project-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"cs-authors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Authors: Jonathan Kelaty, Manal Zneit\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"cs-project-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/jkelaty/course-scheduling\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, \"GitHub Repo\"))));\n  }\n\n  StartPage() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cs-info-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"cs-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"This is a supplemental visualization tool for our CSCI 350/761 Artificial Intelligence final project. Our project addresses the problem of course scheduling for universities as a Constraint Satisfaction Problem. Our objective when designing the interface for this project was to create a tool that can be practically used using readily available information provided by any school. To use this tool, simply upload a CSV with course information and optionally a CSV containing instructor's preferences for certain scheduling parameters. Sample CSVs and templates can be found below.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cs-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"courses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Courses: \"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: () => this.verifyCourses(),\n      type: \"file\",\n      id: \"courses-file\",\n      name: \"courses\",\n      accept: \".csv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"cs-file-download-link\",\n      href: \"./templates/courses.csv\",\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"Template CSV\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"cs-file-download-link\",\n      href: \"./templates/courses.csv\",\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Sample CSV\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"instructors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Instructors: \"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: () => this.verifyInstructors(),\n      type: \"file\",\n      id: \"instructors-file\",\n      name: \"instructors\",\n      accept: \".csv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"cs-file-download-link\",\n      href: \"./templates/courses.csv\",\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Template CSV\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"cs-file-download-link\",\n      href: \"./templates/courses.csv\",\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, \"Sample CSV\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }), this.state.courses && this.state.instructors ? /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: () => this.ready(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jkelaty/Desktop/course-scheduling/course-scheduling/src/CourseScheduling/CourseScheduling.jsx"],"names":["React","ScheduleViewer","CourseScheduling","Component","constructor","props","state","ready","courses","instructors","verifyCourses","courses_file","document","getElementById","files","name","toLowerCase","endsWith","setState","verifyInstructors","instructors_file","render","Header","Reset","StartPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ScheduleViewer from './ScheduleViewer/ScheduleViewer.jsx'\n\nimport '../../node_modules/font-awesome/css/font-awesome.min.css';\nimport './CourseScheduling.scss';\n\nexport default class CourseScheduling extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ready: true,\n      courses: null,\n      instructors: null\n    }\n  }\n\n  verifyCourses() {\n    let courses_file = document.getElementById('courses-file').files[0];\n\n    if ( ! this.state.courses || this.state.courses.name !== courses_file.name ) {\n      if ( courses_file.name.toLowerCase().endsWith('.csv') ) {\n\n        this.setState({\n          courses: courses_file\n        });\n\n      }\n    }\n  }\n\n  verifyInstructors() {\n    let instructors_file = document.getElementById('instructors-file').files[0];\n\n    if ( ! this.state.courses || this.state.courses.name !== instructors_file.name ) {\n      if ( instructors_file.name.toLowerCase().endsWith('.csv') ) {\n\n        this.setState({\n          instructors: instructors_file\n        });\n        \n      }\n    }\n  }\n\n  ready() {\n    if ( this.state.courses && this.state.instructors ) {\n\n      this.setState({\n        ready: true\n      });\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        { this.Header() }\n\n        { this.state.ready ?\n\n          <>\n            { this.Reset() }\n            <ScheduleViewer courses = {this.state.courses} instructors = {this.state.instructors} />\n          </>\n\n        : this.StartPage() }\n      </>\n    );\n  }\n\n  Reset() {\n    return (\n      <>\n        <div className=\"cs-reset\">\n          <i className=\"fas fa-undo\" />\n        </div>\n      </>\n    );\n  }\n\n  Header() {\n    return (\n      <>\n        <h1 className=\"cs-header\">\n          <a href=\"/\">Course Scheduling</a>\n        </h1>\n  \n        <div className=\"cs-project-info\">\n          <p className=\"cs-authors\">\n            Authors: Jonathan Kelaty, Manal Zneit\n          </p>\n  \n          <p className=\"cs-project-link\">\n            <a href=\"https://github.com/jkelaty/course-scheduling\">GitHub Repo</a>\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  StartPage() {\n    return (\n      <>\n        <div className=\"cs-info-wrapper\">\n          <p className=\"cs-info\">\n            This is a supplemental visualization tool for our CSCI 350/761 Artificial\n            Intelligence final project. Our project addresses the problem of course\n            scheduling for universities as a Constraint Satisfaction Problem. Our\n            objective when designing the interface for this project was to create a\n            tool that can be practically used using readily available information\n            provided by any school. To use this tool, simply upload a CSV with course\n            information and optionally a CSV containing instructor's preferences for\n            certain scheduling parameters. Sample CSVs and templates can be found below.\n          </p>\n  \n          <div className=\"cs-upload\">\n            <form>\n              <label for=\"courses\">Courses: </label>\n              <input onChange={() => this.verifyCourses()} type=\"file\" id=\"courses-file\" name=\"courses\" accept=\".csv\" />\n  \n              <br />\n              <br />\n  \n              <a className=\"cs-file-download-link\" href=\"./templates/courses.csv\" download>Template CSV</a>\n              <br />\n              <a className=\"cs-file-download-link\" href=\"./templates/courses.csv\" download>Sample CSV</a>\n  \n              <br />\n              <br />\n  \n              <label for=\"instructors\">Instructors: </label>\n              <input onChange={() => this.verifyInstructors()} type=\"file\" id=\"instructors-file\" name=\"instructors\" accept=\".csv\" />\n  \n              <br />\n              <br />\n  \n              <a className=\"cs-file-download-link\" href=\"./templates/courses.csv\" download>Template CSV</a>\n              <br />\n              <a className=\"cs-file-download-link\" href=\"./templates/courses.csv\" download>Sample CSV</a>\n  \n              <br />\n              <br />\n              \n              { this.state.courses && this.state.instructors ?\n                <input type=\"submit\" onClick={() => this.ready()} />\n              :\n                <input type=\"submit\" disabled /> }\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}