{"ast":null,"code":"var _jsxFileName = \"/Users/jkelaty/Desktop/course-scheduling/course-scheduling/src/CourseScheduling/Scheduler/Scheduler.jsx\";\nimport React from 'react';\nimport ScheduleViewer from '../ScheduleViewer/ScheduleViewer.jsx';\nimport PacmanLoad from 'react-spinners/PacmanLoader';\nimport { readString } from 'react-papaparse';\nimport './Scheduler.scss';\nexport default class Scheduler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.courses = props.courses;\n    this.instructors = props.instructors;\n    this.state = {\n      schedule: null\n    };\n  }\n\n  componentDidMount() {\n    this.run_scheduler();\n  }\n\n  run_scheduler() {\n    /*                            _______\n        Read in courses (if null, error) \\___ Use readString()\n        Read in instructors (if ! null)  /\n        Read in main.py           ______/\n        Add necessary global(s) --> append global string for StringIO\n        Run python and setState to result\n    */\n    let prog = `\nfrom six import StringIO\nTESTDATA = StringIO(\"\"\"col1;col2;col3\\n1;4.4;99\\n2;4.5;200\\n3;4.7;65\\n4;3.2;140\\n\"\"\")\n\nimport pandas as pd\nx = [0] * 5\ndf = pd.read_csv(TESTDATA, sep=\";\")\ndf.values.tolist()`;\n    /*window.languagePluginLoader.then(() => {\n        window.pyodide.loadPackage('pandas').then(() => {\n            console.log(window.pyodide.runPython(prog));\n        });\n    });*/\n\n    let reader = new FileReader();\n\n    reader.onload = function (e) {\n      console.log(reader.result); //const result = readString( reader.result );\n      //console.log( result );\n    }; //reader.readAsText(this.courses);\n\n\n    let file = new File([''], './main.py');\n    reader.readAsText(file);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.schedule ? /*#__PURE__*/React.createElement(ScheduleViewer, {\n      schedule: this.state.schedule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sv-loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PacmanLoad, {\n      size: \"50px\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/jkelaty/Desktop/course-scheduling/course-scheduling/src/CourseScheduling/Scheduler/Scheduler.jsx"],"names":["React","ScheduleViewer","PacmanLoad","readString","Scheduler","Component","constructor","props","courses","instructors","state","schedule","componentDidMount","run_scheduler","prog","reader","FileReader","onload","e","console","log","result","file","File","readAsText","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,OAAO,kBAAP;AAGA,eAAe,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,OAAL,GAAmBD,KAAK,CAACC,OAAzB;AACA,SAAKC,WAAL,GAAmBF,KAAK,CAACE,WAAzB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,aAAL;AACH;;AAEDA,EAAAA,aAAa,GAAG;AACZ;;;;;;;AAQA,QAAIC,IAAI,GACf;;;;;;;mBADO;AAUA;;;;;;AAMA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAY;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAaL,MAAM,CAACM,MAApB,EADwB,CAExB;AACA;AACH,KAJD,CA1BY,CA+BZ;;;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC,EAAD,CAAT,EAAe,WAAf,CAAX;AACAR,IAAAA,MAAM,CAACS,UAAP,CAAkBF,IAAlB;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI,0CACM,KAAKf,KAAL,CAAWC,QAAX,gBAEE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAI,KAAKD,KAAL,CAAWC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,gBAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPR,CADJ;AAcH;;AAnEkD","sourcesContent":["import React from 'react';\n\nimport ScheduleViewer from '../ScheduleViewer/ScheduleViewer.jsx';\nimport PacmanLoad from 'react-spinners/PacmanLoader';\n\nimport { readString } from 'react-papaparse';\n\nimport './Scheduler.scss';\n\n\nexport default class Scheduler extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.courses     = props.courses;\n        this.instructors = props.instructors;\n\n        this.state = {\n            schedule: null\n        };\n    }\n\n    componentDidMount() {\n        this.run_scheduler();\n    }\n\n    run_scheduler() {\n        /*                            _______\n            Read in courses (if null, error) \\___ Use readString()\n            Read in instructors (if ! null)  /\n            Read in main.py           ______/\n            Add necessary global(s) --> append global string for StringIO\n            Run python and setState to result\n        */\n\n        let prog =\n`\nfrom six import StringIO\nTESTDATA = StringIO(\"\"\"col1;col2;col3\\n1;4.4;99\\n2;4.5;200\\n3;4.7;65\\n4;3.2;140\\n\"\"\")\n\nimport pandas as pd\nx = [0] * 5\ndf = pd.read_csv(TESTDATA, sep=\";\")\ndf.values.tolist()`;\n\n        /*window.languagePluginLoader.then(() => {\n            window.pyodide.loadPackage('pandas').then(() => {\n                console.log(window.pyodide.runPython(prog));\n            });\n        });*/\n\n        let reader = new FileReader();\n        reader.onload = function(e) {\n            console.log( reader.result );\n            //const result = readString( reader.result );\n            //console.log( result );\n        };\n        //reader.readAsText(this.courses);\n        let file = new File([''], './main.py');\n        reader.readAsText(file);\n    }\n\n    render() {\n        return (\n            <>\n                { this.state.schedule ?\n\n                    <ScheduleViewer schedule = {this.state.schedule} />\n\n                :\n\n                    <div className=\"sv-loading\">\n                        <PacmanLoad size='50px' color='white' />\n                    </div>\n                }\n            </>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}