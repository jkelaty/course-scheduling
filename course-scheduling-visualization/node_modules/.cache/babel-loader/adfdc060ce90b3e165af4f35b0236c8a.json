{"ast":null,"code":"var _jsxFileName = \"/Users/jkelaty/Desktop/course-scheduling/course-scheduling/src/CourseScheduling/ScheduleViewer/ScheduleViewer.jsx\";\nimport React from 'react';\nimport Filters from './Filters.jsx';\nimport TimeTable from './TimeTable.jsx';\nimport DayTable from './DayTable.jsx';\nimport { CSSTransition } from 'react-transition-group';\nimport './ScheduleViewer.scss';\nexport default class ScheduleViewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.schedule = null;\n    this.data = {\n      subjects: new Set(),\n      courses: new Set(),\n      instructors: new Set(),\n      rooms: new Set(),\n      times: new Set(),\n      days: new Set(),\n      colors: {}\n    };\n    this.callback = this.changeFilters.bind(this);\n    this.state = {\n      display_schedule: null,\n      filters_active: false,\n      filters: {\n        subjects: new Set(),\n        courses: new Set(),\n        instructors: new Set(),\n        rooms: new Set(),\n        times: new Set(),\n        days: new Set()\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.parseSchedule(this.props.schedule);\n    this.setState({\n      display_schedule: this.getDisplaySchedule()\n    });\n  }\n\n  parseSchedule(schedule_arr) {\n    var colors = {};\n    var schedule = {};\n\n    for (let i = 1; i < schedule_arr.length; ++i) {\n      let subject = schedule_arr[i][0];\n      let section = schedule_arr[i][1];\n\n      if (section[0] !== ' ') {\n        section = ' ' + section;\n      }\n\n      let course = subject + section;\n      let days = schedule_arr[i][3];\n      let days_string = String(days);\n      var days_set = new Set();\n\n      while (days_string !== '') {\n        if (days_string[0] === 'M') {\n          days_set.add('Monday');\n          days_string = days_string.substring(1);\n        } else if (days_string[0] === 'W') {\n          days_set.add('Wednesday');\n          days_string = days_string.substring(1);\n        } else if (days_string[0] === 'F') {\n          days_set.add('Friday');\n          days_string = days_string.substring(1);\n        } else if (days_string.substring(0, 2) === 'TH') {\n          days_set.add('Thursday');\n          days_string = days_string.substring(2);\n        } else if (days_string[0] === 'T') {\n          days_set.add('Tuesday');\n          days_string = days_string.substring(1);\n        } else {\n          break;\n        }\n      }\n\n      let times = schedule_arr[i][4];\n      var time = {\n        start: {\n          hour: 12,\n          minute: 0\n        },\n        end: {\n          hour: 12,\n          minute: 0\n        }\n      };\n\n      if (times) {\n        let duration = parseInt(schedule_arr[i][6]);\n        let time_array = times.split(' ');\n        let time_start = time_array[0].split(':');\n        let time_end = time_array[0].split(':');\n        let time_period = time_array[1];\n\n        for (let j = 0; j < time_start.length; ++j) {\n          time_start[j] = parseInt(time_start[j]);\n          time_end[j] = parseInt(time_end[j]);\n        }\n\n        if (time_period === 'PM' && time_start[0] !== 12) {\n          time_start[0] += 12;\n          time_end[0] += 12;\n        }\n\n        time_end[0] += parseInt(duration / 60);\n        time_end[1] += duration % 60;\n        time_end[0] += parseInt(time_end[1] / 60);\n        time_end[1] %= 60;\n        time['start']['hour'] = time_start[0];\n        time['start']['minute'] = time_start[1];\n        time['end']['hour'] = time_end[0];\n        time['end']['minute'] = time_end[1];\n        times += ' - ';\n\n        if (time['end']['hour'] > 12) {\n          times += time['end']['hour'] - 12;\n        } else {\n          times += time['end']['hour'];\n        }\n\n        if (time['end']['minute'] < 10) {\n          times += ':0';\n        } else {\n          times += ':';\n        }\n\n        times += time['end']['minute'];\n\n        if (time['end']['hour'] >= 12) {\n          times += ' PM';\n        } else {\n          times += ' AM';\n        }\n      }\n\n      let color = '#' + Math.floor(Math.random() * 16777215).toString(16);\n\n      while (color.length < 7) {\n        color = '#' + Math.floor(Math.random() * 16777215).toString(16);\n      }\n\n      if (subject in colors) {\n        color = colors[subject];\n      }\n\n      schedule[course] = {};\n      schedule[course]['course'] = course;\n      schedule[course]['subject'] = subject;\n      schedule[course]['section'] = section;\n      schedule[course]['days'] = days_set;\n      schedule[course]['time'] = time;\n      schedule[course]['room'] = schedule_arr[i][2];\n      schedule[course]['instructor'] = schedule_arr[i][5];\n      schedule[course]['color'] = color;\n      schedule[course]['days_f'] = days;\n      schedule[course]['time_f'] = times;\n    }\n\n    this.schedule = schedule;\n    this.data.colors = colors;\n  }\n\n  getDisplaySchedule(filters = this.state.filters) {\n    var display_schedule = {\n      Monday: {},\n      Tuesday: {},\n      Wednesday: {},\n      Thursday: {},\n      Friday: {}\n    };\n\n    for (var course in this.schedule) {\n      for (var day in display_schedule) {\n        if (day in this.schedule[course]['days']) {\n          display_schedule[day][course] = true;\n        }\n      }\n    }\n\n    return display_schedule;\n  }\n\n  openFilters() {\n    this.setState({\n      filters_active: !this.state.filters_active\n    });\n  }\n\n  changeFilters(new_filters) {\n    this.setState({\n      display_schedule: this.getDisplaySchedule(new_filters),\n      filters_active: false,\n      filters: new_filters\n    });\n  }\n\n  render() {\n    if (this.state.display_schedule) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cs-table-header-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cs-timetable-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"cs-table-filter\",\n        href: \"#/\",\n        onClick: () => this.openFilters(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cs-daytable-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, \"Monday    \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cs-daytable-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      }, \"Tuesday   \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cs-daytable-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }, \"Wednesday \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cs-daytable-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, \"Thursday  \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cs-daytable-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      }, \"Friday    \"), /*#__PURE__*/React.createElement(CSSTransition, {\n        appear: true,\n        timeout: 300,\n        in: this.state.filters_active,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Filters, {\n        filters: this.state.filters,\n        callback: this.callback,\n        schedule: this.schedule,\n        colors: this.colors,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cs-table-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TimeTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DayTable, {\n        schedule: this.schedule,\n        display: this.state.display_schedule,\n        day: 'Monday',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DayTable, {\n        schedule: this.schedule,\n        display: this.state.display_schedule,\n        day: 'Tuesday',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DayTable, {\n        schedule: this.schedule,\n        display: this.state.display_schedule,\n        day: 'Wednesday',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DayTable, {\n        schedule: this.schedule,\n        display: this.state.display_schedule,\n        day: 'Thursday',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(DayTable, {\n        schedule: this.schedule,\n        display: this.state.display_schedule,\n        day: 'Friday',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \" \");\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jkelaty/Desktop/course-scheduling/course-scheduling/src/CourseScheduling/ScheduleViewer/ScheduleViewer.jsx"],"names":["React","Filters","TimeTable","DayTable","CSSTransition","ScheduleViewer","Component","constructor","props","schedule","data","subjects","Set","courses","instructors","rooms","times","days","colors","callback","changeFilters","bind","state","display_schedule","filters_active","filters","componentDidMount","parseSchedule","setState","getDisplaySchedule","schedule_arr","i","length","subject","section","course","days_string","String","days_set","add","substring","time","start","hour","minute","end","duration","parseInt","time_array","split","time_start","time_end","time_period","j","color","Math","floor","random","toString","Monday","Tuesday","Wednesday","Thursday","Friday","day","openFilters","new_filters","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Filters from './Filters.jsx';\nimport TimeTable from './TimeTable.jsx';\nimport DayTable from './DayTable.jsx';\n\nimport { CSSTransition } from 'react-transition-group';\n\nimport './ScheduleViewer.scss';\n\nexport default class ScheduleViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.schedule = null;\n\n        this.data = {\n            subjects:    new Set(),\n            courses:     new Set(),\n            instructors: new Set(),\n            rooms:       new Set(),\n            times:       new Set(),\n            days:        new Set(),\n            colors:      {}\n        };\n\n        this.callback = this.changeFilters.bind(this);\n\n        this.state = {\n            display_schedule : null,\n            filters_active: false,\n            filters: {\n                subjects:    new Set(),\n                courses:     new Set(),\n                instructors: new Set(),\n                rooms:       new Set(),\n                times:       new Set(),\n                days:        new Set()\n            }\n        };\n    }\n\n    componentDidMount() {\n        this.parseSchedule(this.props.schedule);\n\n        this.setState({\n            display_schedule: this.getDisplaySchedule()\n        });\n    }\n\n    parseSchedule(schedule_arr) {\n        var colors   = {};\n        var schedule = {};\n\n        for (let i = 1; i < schedule_arr.length; ++i) {\n            let subject = schedule_arr[i][0];\n            let section = schedule_arr[i][1]\n\n            if ( section[0] !== ' ' ) {\n                section = ' ' + section;\n            }\n\n            let course = subject + section;\n\n            let days = schedule_arr[i][3];\n            let days_string = String(days);\n            var days_set = new Set();\n\n            while ( days_string !== '' ) {\n                if ( days_string[0] === 'M' ) {\n                    days_set.add('Monday');\n                    days_string = days_string.substring(1);\n                }\n                else if ( days_string[0] === 'W' ) {\n                    days_set.add('Wednesday');\n                    days_string = days_string.substring(1);\n                }\n                else if ( days_string[0] === 'F' ) {\n                    days_set.add('Friday');\n                    days_string = days_string.substring(1);\n                }\n                else if ( days_string.substring(0,2) === 'TH' ) {\n                    days_set.add('Thursday');\n                    days_string = days_string.substring(2);\n                }\n                else if ( days_string[0] === 'T' ) {\n                    days_set.add('Tuesday');\n                    days_string = days_string.substring(1);\n                }\n                else {\n                    break;\n                }\n            }\n\n            let times = schedule_arr[i][4];\n\n            var time = {\n                start: {\n                    hour: 12,\n                    minute: 0\n                },\n                end: {\n                    hour: 12,\n                    minute: 0\n                }\n            };\n\n            if ( times ) {\n                let duration    = parseInt(schedule_arr[i][6]);\n                let time_array  = times.split(' ');\n                let time_start  = time_array[0].split(':');\n                let time_end    = time_array[0].split(':');\n                let time_period = time_array[1];\n\n                for (let j = 0; j < time_start.length; ++j) {\n                    time_start[j] = parseInt( time_start[j] );\n                    time_end[j]   = parseInt( time_end[j]   );\n                }\n\n                if ( time_period === 'PM' && time_start[0] !== 12 ) {\n                    time_start[0] += 12;\n                    time_end[0]   += 12;\n                }\n\n                time_end[0] += parseInt(duration / 60);\n                time_end[1] += duration % 60;\n                time_end[0] += parseInt(time_end[1] / 60);\n                time_end[1] %= 60\n\n                time['start']['hour']   = time_start[0];\n                time['start']['minute'] = time_start[1];\n                time['end']['hour']     = time_end[0];\n                time['end']['minute']   = time_end[1];\n\n                times += ' - ';\n\n                if ( time['end']['hour'] > 12 ) {\n                    times += (time['end']['hour'] - 12);\n                }\n                else {\n                    times += time['end']['hour'];\n                }\n                \n                if ( time['end']['minute'] < 10 ) {\n                    times += ':0';\n                }\n                else {\n                    times += ':';\n                }\n\n                times += time['end']['minute'];\n\n                if ( time['end']['hour'] >= 12 ) {\n                    times += ' PM';\n                }\n                else {\n                    times += ' AM';\n                }\n            }\n\n            let color = '#' + Math.floor(Math.random()*16777215).toString(16);\n\n            while ( color.length < 7 ) {\n                color = '#' + Math.floor(Math.random()*16777215).toString(16);\n            }\n\n            if ( subject in colors ) {\n                color = colors[subject];\n            }\n\n            schedule[course]               = {};\n            schedule[course]['course']     = course;\n            schedule[course]['subject']    = subject;\n            schedule[course]['section']    = section;\n            schedule[course]['days']       = days_set;\n            schedule[course]['time']       = time;\n            schedule[course]['room']       = schedule_arr[i][2];\n            schedule[course]['instructor'] = schedule_arr[i][5];\n            schedule[course]['color']      = color;\n            schedule[course]['days_f']     = days;\n            schedule[course]['time_f']     = times;\n        }\n\n        this.schedule    = schedule;\n        this.data.colors = colors;\n    }\n\n    getDisplaySchedule(filters = this.state.filters) {\n        var display_schedule = {\n            Monday:    {},\n            Tuesday:   {},\n            Wednesday: {},\n            Thursday:  {},\n            Friday:    {}\n        };\n\n        for (var course in this.schedule) {\n            for (var day in display_schedule) {\n                if ( day in this.schedule[course]['days'] ) {\n                    display_schedule[day][course] = true;\n                }\n            }\n        }\n\n        return display_schedule;\n    }\n\n    openFilters() {\n        this.setState({\n            filters_active: ! this.state.filters_active\n        });\n    }\n\n    changeFilters(new_filters) {\n        this.setState({\n            display_schedule: this.getDisplaySchedule(new_filters),\n            filters_active: false,\n            filters: new_filters\n        });\n    }\n\n    render() {\n        if ( this.state.display_schedule ) {\n            return (\n                <>\n                <div className=\"cs-table-header-wrapper\">\n                    <div className=\"cs-timetable-header\">\n                        <a className=\"cs-table-filter\" href=\"#/\" onClick={() => this.openFilters()}>\n                            <i className=\"fas fa-filter\"></i>\n                        </a>\n                    </div>\n                    \n                    <div className=\"cs-daytable-header\">Monday    </div>\n                    <div className=\"cs-daytable-header\">Tuesday   </div>\n                    <div className=\"cs-daytable-header\">Wednesday </div>\n                    <div className=\"cs-daytable-header\">Thursday  </div>\n                    <div className=\"cs-daytable-header\">Friday    </div>\n\n                    <CSSTransition\n                        appear  = {true}\n                        timeout = {300}\n                        in      = {this.state.filters_active} >\n\n                        <Filters\n                            filters  = {this.state.filters}\n                            callback = {this.callback}\n                            schedule = {this.schedule}\n                            colors   = {this.colors} />\n                    \n                    </CSSTransition>\n                </div>\n\n                <div className=\"cs-table-wrapper\">\n                    <TimeTable />\n\n                    <DayTable schedule={this.schedule} display={this.state.display_schedule} day={'Monday'}    />\n                    <DayTable schedule={this.schedule} display={this.state.display_schedule} day={'Tuesday'}   />\n                    <DayTable schedule={this.schedule} display={this.state.display_schedule} day={'Wednesday'} />\n                    <DayTable schedule={this.schedule} display={this.state.display_schedule} day={'Thursday'}  />\n                    <DayTable schedule={this.schedule} display={this.state.display_schedule} day={'Friday'}    />\n                </div>\n                </>\n            );\n        }\n        else {\n            return ( <> </> );\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}